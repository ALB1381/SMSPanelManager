// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMSPanelManager.Data.Context;

#nullable disable

namespace SMSPanelManager.Data.Migrations
{
    [DbContext(typeof(SMSPanelContext))]
    [Migration("20240422091726_Mig-000")]
    partial class Mig000
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SMSPanelManager.Data.Entities.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SMSPanelManager.Data.Entities.OrderedProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("OrderedProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrintableSMSId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrintableSMSId");

                    b.ToTable("OrderedProducts");
                });

            modelBuilder.Entity("SMSPanelManager.Data.Entities.PrinteableSMS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPrinted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SMSId")
                        .HasColumnType("int");

                    b.Property<string>("SMSText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("SMSId");

                    b.ToTable("PrinteableSMs");
                });

            modelBuilder.Entity("SMSPanelManager.Data.Entities.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductName = "تره"
                        },
                        new
                        {
                            ProductId = 2,
                            ProductName = "جعفری"
                        },
                        new
                        {
                            ProductId = 3,
                            ProductName = "گشنیز"
                        },
                        new
                        {
                            ProductId = 4,
                            ProductName = "اسفناج"
                        },
                        new
                        {
                            ProductId = 5,
                            ProductName = "شوید"
                        },
                        new
                        {
                            ProductId = 6,
                            ProductName = "شنبلیله"
                        },
                        new
                        {
                            ProductId = 7,
                            ProductName = "سیر"
                        },
                        new
                        {
                            ProductId = 8,
                            ProductName = "باقالی"
                        },
                        new
                        {
                            ProductId = 9,
                            ProductName = "لوبیا"
                        },
                        new
                        {
                            ProductId = 10,
                            ProductName = "بادمجان"
                        },
                        new
                        {
                            ProductId = 11,
                            ProductName = "سبزی"
                        },
                        new
                        {
                            ProductId = 12,
                            ProductName = "بامیه"
                        },
                        new
                        {
                            ProductId = 13,
                            ProductName = "مخلوط"
                        },
                        new
                        {
                            ProductId = 14,
                            ProductName = "نخود"
                        },
                        new
                        {
                            ProductId = 15,
                            ProductName = "ذرت"
                        },
                        new
                        {
                            ProductId = 16,
                            ProductName = "رب"
                        },
                        new
                        {
                            ProductId = 17,
                            ProductName = "خیار"
                        },
                        new
                        {
                            ProductId = 18,
                            ProductName = "زیتون"
                        },
                        new
                        {
                            ProductId = 19,
                            ProductName = "پیاز"
                        },
                        new
                        {
                            ProductId = 20,
                            ProductName = "نعنا"
                        },
                        new
                        {
                            ProductId = 21,
                            ProductName = "ترخون"
                        },
                        new
                        {
                            ProductId = 22,
                            ProductName = "مرزه"
                        },
                        new
                        {
                            ProductId = 23,
                            ProductName = "تیغ"
                        },
                        new
                        {
                            ProductId = 24,
                            ProductName = "شور"
                        },
                        new
                        {
                            ProductId = 25,
                            ProductName = "ترشی"
                        },
                        new
                        {
                            ProductId = 26,
                            ProductName = "فلفل"
                        },
                        new
                        {
                            ProductId = 27,
                            ProductName = "سس"
                        },
                        new
                        {
                            ProductId = 28,
                            ProductName = "برگ"
                        });
                });

            modelBuilder.Entity("SMSPanelManager.Data.Entities.SMS", b =>
                {
                    b.Property<int>("SMSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SMSId"));

                    b.Property<int?>("PrintableSMSId")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedSmsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceivedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SMSId");

                    b.HasIndex("PrintableSMSId")
                        .IsUnique()
                        .HasFilter("[PrintableSMSId] IS NOT NULL");

                    b.ToTable("SMSs");
                });

            modelBuilder.Entity("SMSPanelManager.Data.Entities.User", b =>
                {
                    b.Property<byte>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("UserId"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = (byte)1,
                            UserName = "<Awnm#|$|%!@ll*$>",
                            UserPassword = "!!<Q!0!@9f|j|f&#$>!!"
                        });
                });

            modelBuilder.Entity("SMSPanelManager.Data.Entities.OrderedProducts", b =>
                {
                    b.HasOne("SMSPanelManager.Data.Entities.PrinteableSMS", "PrinteableSMS")
                        .WithMany("OrderedProducts")
                        .HasForeignKey("PrintableSMSId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PrinteableSMS");
                });

            modelBuilder.Entity("SMSPanelManager.Data.Entities.PrinteableSMS", b =>
                {
                    b.HasOne("SMSPanelManager.Data.Entities.Contact", "Contact")
                        .WithMany("PrinteableSMs")
                        .HasForeignKey("ContactId");

                    b.HasOne("SMSPanelManager.Data.Entities.SMS", "SMS")
                        .WithMany()
                        .HasForeignKey("SMSId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("SMS");
                });

            modelBuilder.Entity("SMSPanelManager.Data.Entities.SMS", b =>
                {
                    b.HasOne("SMSPanelManager.Data.Entities.PrinteableSMS", "PrinteableSMS")
                        .WithOne()
                        .HasForeignKey("SMSPanelManager.Data.Entities.SMS", "PrintableSMSId");

                    b.Navigation("PrinteableSMS");
                });

            modelBuilder.Entity("SMSPanelManager.Data.Entities.Contact", b =>
                {
                    b.Navigation("PrinteableSMs");
                });

            modelBuilder.Entity("SMSPanelManager.Data.Entities.PrinteableSMS", b =>
                {
                    b.Navigation("OrderedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
